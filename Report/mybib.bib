@article{Classen2013FeaturedTS,
  title={Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking},
  author={Andreas Classen and Maxime Cordy and Pierre-Yves Schobbens and Patrick Heymans and Axel Legay and Jean-François Raskin},
  journal={IEEE Transactions on Software Engineering},
  year={2013},
  volume={39},
  pages={1069-1089}
}
@inproceedings{inproceedings,
	author = {Classen, Andreas and Heymans, Patrick and Schobbens, Pierre Yves and Legay, Axel and Raskin, Jean-Pierre},
	year = {2010},
	month = {01},
	pages = {},
	title = {Model Checking Lots of Systems: Efficient Verification of Temporal Properties in Software Product Lines},
	volume = {1},
	journal = {Proceedings - International Conference on Software Engineering},
	doi = {10.1145/1806799.1806850}
}
@Inbook{Bradfield2018,
	author="Bradfield, Julian
	and Walukiewicz, Igor",
	editor="Clarke, Edmund M.
	and Henzinger, Thomas A.
	and Veith, Helmut
	and Bloem, Roderick",
	title="The mu-calculus and Model Checking",
	bookTitle="Handbook of Model Checking",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="871--919",
	abstract="This chapter presents that part of the theory of the $\mu${\$}{\backslash}mu{\$}-calculus that is relevant to the model-checking problem as broadly understood. The $\mu${\$}{\backslash}mu{\$}-calculus is one of the most important logics in model checking. It is a logic with an exceptional balance between expressiveness and algorithmic properties.",
	isbn="978-3-319-10575-8",
	doi="10.1007/978-3-319-10575-8_26",
	url="https://doi.org/10.1007/978-3-319-10575-8_26"
}
@BOOK {Groote,
	author    = "Jan Friso Groote and Mohammad Reza Mousavi",
	title     = "Modeling and Analysis of Communicating Systems",
	publisher = "The MIT Press",
	year      = "2014"
}
@inproceedings{FamBasedModelCheckingWithMCRL2,
	title = "Family-based model checking with mCRL2",
	abstract = "Family-based model checking targets the simultaneous verfication of multiple system variants, a technique to handle feature-based variability that is intrinsic to software product lines (SPLs). We present an approach for family-based verification based on the feature μ-calculus μLf, which combines modalities with feature expressions. This logic is interpreted over featured transition systems, a well-accepted model of SPLs, which allows one to reason over the collective behavior of a number of variants (a family of products). Via an embedding into the modal μ-calculus with data, underpinned by the general-purpose mCRL2 toolset, off-the-shelf tool support for μLf becomes readily available. We illustrate the feasibility of our approach on an SPL benchmark model and show the runtime improvement that family-based model checking with mCRL2 offers with respect to model checking the benchmark product-by-product.",
	author = "{ter Beek}, M.H. and {de Vink}, E.P. and T.A.C. Willemse",
	year = "2017",
	doi = "10.1007/978-3-662-54494-5_23",
	language = "English",
	isbn = "978-3-662-54494-5",
	series = "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
	publisher = "Springer",
	pages = "387--405",
	editor = "M. Huisman and J. Rubin",
	booktitle = "Fundamental Approaches to Software Engineering",
	address = "Germany",
}
@article{STREETT1989249,
	title = "An automata theoretic decision procedure for the propositional mu-calculus",
	journal = "Information and Computation",
	volume = "81",
	number = "3",
	pages = "249 - 264",
	year = "1989",
	issn = "0890-5401",
	doi = "https://doi.org/10.1016/0890-5401(89)90031-X",
	url = "http://www.sciencedirect.com/science/article/pii/089054018990031X",
	author = "Robert S. Streett and E. Allen Emerson",
	abstract = "The propositional mu-calculus is a propositional logic of programs which incorporates a least fixpoint operator and subsumes the propositional dynamic logic of Fischer and Ladner, the infinite looping construct of Streett, and the game logic of Parikh. We give an elementary time decision procedure, using a reduction to the emptiness problem for automata on infinite trees. A small model theorem is obtained as a corollary."
}
@article{FISCHER1979194,
	title = "Propositional dynamic logic of regular programs",
	journal = "Journal of Computer and System Sciences",
	volume = "18",
	number = "2",
	pages = "194 - 211",
	year = "1979",
	issn = "0022-0000",
	doi = "https://doi.org/10.1016/0022-0000(79)90046-1",
	url = "http://www.sciencedirect.com/science/article/pii/0022000079900461",
	author = "Michael J. Fischer and Richard E. Ladner",
	abstract = "We introduce a fundamental propositional logical system based on modal logic for describing correctness, termination and equivalence of programs. We define a formal syntax and semantics for the propositional dynamic logic of regular programs and give several consequences of the definition. Principal conclusions are that deciding satisfiability of length n formulas requires time dn/logn for some d > 1, and that satisfiability can be decided in nondeterministic time cn for some c. We provide applications of the decision procedure to regular expressions, Ianov schemes, and classical systems of modal logic."
}
@article{ZIELONKA1998135,
	title = "Infinite games on finitely coloured graphs with applications to automata on infinite trees",
	journal = "Theoretical Computer Science",
	volume = "200",
	number = "1",
	pages = "135 - 183",
	year = "1998",
	issn = "0304-3975",
	doi = "https://doi.org/10.1016/S0304-3975(98)00009-7",
	url = "http://www.sciencedirect.com/science/article/pii/S0304397598000097",
	author = "Wieslaw Zielonka",
	keywords = "Infinite games, Infinite trees, Rabin complementation lemma",
	abstract = "We examine a class of infinite two-person games on finitely coloured graphs. The main aim is to construct finite memory winning strategies for both players. This problem is motivated by applications to finite automata on infinite trees. A special attention is given to the exact amount of memory needed by the players for their winning strategies. Based on a previous work of Gurevich and Harrington and on subsequent improvements of McNaughton we propose a unique framework that allows to reestablish and to improve various results concerning memoryless strategies due to Emerson and Jutla, Mostowski, Klarlund."
}
@book{BDD_book,
	author = {Wegener, I.},
	title = {Branching Programs and Binary Decision Diagrams},
	publisher = {Society for Industrial and Applied Mathematics},
	year = {2000},
	doi = {10.1137/1.9780898719789},
	address = {},
	edition   = {},
	URL = {https://epubs.siam.org/doi/abs/10.1137/1.9780898719789},
	eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9780898719789}
}
@book{BDD_running_time,
	author = {Wegener, I.},
	title = {Branching Programs and Binary Decision Diagrams},
	publisher = {Society for Industrial and Applied Mathematics},
	year = {2000},
	doi = {10.1137/1.9780898719789},
	address = {},
	edition   = {},
	URL = {https://epubs.siam.org/doi/abs/10.1137/1.9780898719789},
	eprint = {https://epubs.siam.org/doi/pdf/10.1137/1.9780898719789}
}
@InProceedings{SolvingPGInPractice,
	author="Friedmann, Oliver
	and Lange, Martin",
	editor="Liu, Zhiming
	and Ravn, Anders P.",
	title="Solving Parity Games in Practice",
	booktitle="Automated Technology for Verification and Analysis",
	year="2009",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="182--196",
	abstract="Parity games are 2-player games of perfect information and infinite duration that have important applications in automata theory and decision procedures (validity as well as model checking) for temporal logics. In this paper we investigate practical aspects of solving parity games. The main contribution is a suggestion on how to solve parity games efficiently in practice: we present a generic solver that intertwines optimisations with any of the existing parity game algorithms which is only called on parts of a game that cannot be solved faster by simpler methods. This approach is evaluated empirically on a series of benchmarking games from the aforementioned application domains, showing that using this approach vastly speeds up the solving process. As a side-effect we obtain the surprising observation that Zielonka's recursive algorithm is the best parity game solver in practice.",
	isbn="978-3-642-04761-9"
}

@Inbook{Handbook_BDD_Chapter,
	author="Bryant, Randal E.",
	editor="Clarke, Edmund M.
	and Henzinger, Thomas A.
	and Veith, Helmut
	and Bloem, Roderick",
	title="Binary Decision Diagrams",
	bookTitle="Handbook of Model Checking",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="191--217",
	abstract="Binary decision diagrams provide a data structure for representing and manipulating Boolean functions in symbolic form. They have been especially effective as the algorithmic basis for symbolic model checkers. A binary decision diagram represents a Boolean function as a directed acyclic graph, corresponding to a compressed form of decision tree. Most commonly, an ordering constraint is imposed among the occurrences of decision variables in the graph, yielding ordered binary decision diagrams (OBDD). Representing all functions as OBDDs with a common variable ordering has the advantages that (1) there is a unique, reduced representation of any function, (2) there is a simple algorithm to reduce any OBDD to the unique form for that function, and (3) there is an associated set of algorithms to implement a wide variety of operations on Boolean functions represented as OBDDs. Recent work in this area has focused on generalizations to represent larger classes of functions, as well as on scaling implementations to handle larger and more complex problems.",
	isbn="978-3-319-10575-8",
	doi="10.1007/978-3-319-10575-8_7",
	url="https://doi.org/10.1007/978-3-319-10575-8_7"
}
@techreport{Emerson:1986:MCP:900378,
	author = {Emerson, E. A and Lei, Chin},
	title = {Model Checking in the Propositional Mu-calculus},
	year = {1986},
	source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Autexas_cs%3AUTEXAS_CS%2F%2FCS-TR-86-06},
	publisher = {University of Texas at Austin},
	address = {Austin, TX, USA},
} 
@article{WALUKIEWICZ2002311,
	title = "Monadic second-order logic on tree-like structures",
	journal = "Theoretical Computer Science",
	volume = "275",
	number = "1",
	pages = "311 - 346",
	year = "2002",
	issn = "0304-3975",
	doi = "https://doi.org/10.1016/S0304-3975(01)00185-2",
	url = "http://www.sciencedirect.com/science/article/pii/S0304397501001852",
	author = "Igor Walukiewicz",
	keywords = "Monadic second-order logic, Tree automata, Decidability",
	abstract = "An operation M∗ which constructs from a given structure M a tree-like structure whose domain consists of the finite sequences of elements of M is considered. A notion of automata running on such tree-like structures is defined. It is shown that automata of this kind characterise expressive power of monadic second-order logic (MSOL) over tree-like structures. Using this characterisation it is proved that MSOL theory of a tree-like structure is effectively reducible to that of the original structure. As another application of the characterisation it is shown that MSOL on trees of arbitrary degree is equivalent to first-order logic extended with unary least fixpoint operator."
}
@article{FPITE,
	author = {Bruse, Florian and Falk, Michael and Lange, Martin},
	year = {2014},
	month = {08},
	pages = {},
	title = {The Fixpoint-Iteration Algorithm for Parity Games},
	volume = {161},
	journal = {Electronic Proceedings in Theoretical Computer Science},
	doi = {10.4204/EPTCS.161.12}
}
@InProceedings{SolvingInPractice,
	author="Friedmann, Oliver
	and Lange, Martin",
	editor="Liu, Zhiming
	and Ravn, Anders P.",
	title="Solving Parity Games in Practice",
	booktitle="Automated Technology for Verification and Analysis",
	year="2009",
	publisher="Springer Berlin Heidelberg",
	address="Berlin, Heidelberg",
	pages="182--196",
	abstract="Parity games are 2-player games of perfect information and infinite duration that have important applications in automata theory and decision procedures (validity as well as model checking) for temporal logics. In this paper we investigate practical aspects of solving parity games. The main contribution is a suggestion on how to solve parity games efficiently in practice: we present a generic solver that intertwines optimisations with any of the existing parity game algorithms which is only called on parts of a game that cannot be solved faster by simpler methods. This approach is evaluated empirically on a series of benchmarking games from the aforementioned application domains, showing that using this approach vastly speeds up the solving process. As a side-effect we obtain the surprising observation that Zielonka's recursive algorithm is the best parity game solver in practice.",
	isbn="978-3-642-04761-9"
}
@article{tarski1955,
	author = "Tarski, Alfred",
	fjournal = "Pacific Journal of Mathematics",
	journal = "Pacific J. Math.",
	number = "2",
	pages = "285--309",
	publisher = "Pacific Journal of Mathematics, A Non-profit Corporation",
	title = "A lattice-theoretical fixpoint theorem and its applications.",
	url = "https://projecteuclid.org:443/euclid.pjm/1103044538",
	volume = "5",
	year = "1955"
}
@book{birkhoff1940lattice,
	title={Lattice Theory},
	author={Birkhoff, G.},
	number={v. 25,dl. 2},
	isbn={9780821810255},
	lccn={66023707},
	series={American Mathematical Society colloquium publications},
	url={https://books.google.nl/books?id=0Y8d-MdtVwkC},
	year={1940},
	publisher={American Mathematical Society}
}
@inproceedings{Kramer1983CONICAI,
	title={CONIC: an integrated approach to distributed computer control systems},
	author={Jeff Kramer and Jeff Magee and Morris Sloman and Andrew Lister},
	year={1983}
}
@article{PLATH200153,
	title = "Feature integration using a feature construct",
	journal = "Science of Computer Programming",
	volume = "41",
	number = "1",
	pages = "53 - 84",
	year = "2001",
	issn = "0167-6423",
	doi = "https://doi.org/10.1016/S0167-6423(00)00018-6",
	url = "http://www.sciencedirect.com/science/article/pii/S0167642300000186",
	author = "Malte Plath and Mark Ryan",
	keywords = "Features, Feature interaction, Model checking",
	abstract = "A feature is a unit of functionality that may be added to (or omitted from) a system. Examples of features are plug-ins for software packages or additional services offered by telecommunications providers. Many features override the default behaviour of the system, which may lead to unforeseen behaviour of the system; this is known as feature interaction. We propose a feature construct for defining features, and use it to provide a plug-and-play framework for exploring feature interactions. Our approach to the feature interaction problem has the following characteristics: •Features are treated as first-class objects during the development phase.•A method is given for integrating a feature into a system description. It allows features to override existing behaviour of the system being developed.•A prototype tool has been developed for performing the integration.•Interactions between features may be witnessed. In principle, our approach is quite general and need not be tied to any particular system description language. In this paper, however, we develop the approach in the context of the SMV model checking system. We describe two case studies in detail: a lift system and a telephone system."
}
@inproceedings{Friedmann2010ThePC,
	title={The PGSolver Collection of Parity Game Solvers Version 3},
	author={Oliver Friedmann and Martin Lange},
	year={2010}
}
@book{BDDSolvingPG,
	title = "BDD-based parity game solving: a comparison of Zielonka's recursive algorithm, priority promotion and fixpoint iteration",
	author = "L. Sanchez and J.W. Wesselink and T.A.C. Willemse",
	year = "2018",
	language = "English",
	series = "Computer science reports",
	publisher = "Technische Universiteit Eindhoven",
}
@InProceedings{Oink,
	author="van Dijk, Tom",
	editor="Beyer, Dirk
	and Huisman, Marieke",
	title="Oink: An Implementation and Evaluation of Modern Parity Game Solvers",
	booktitle="Tools and Algorithms for the Construction and Analysis of Systems",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="291--308",
	abstract="Parity games have important practical applications in formal verification and synthesis, especially to solve the model-checking problem of the modal mu-calculus. They are also interesting from the theory perspective, as they are widely believed to admit a polynomial solution, but so far no such algorithm is known. In recent years, a number of new algorithms and improvements to existing algorithms have been proposed. We implement a new and easy to extend tool Oink, which is a high-performance implementation of modern parity game algorithms. We further present a comprehensive empirical evaluation of modern parity game algorithms and solvers, both on real world benchmarks and randomly generated games. Our experiments show that our new tool Oink outperforms the current state-of-the-art.",
	isbn="978-3-319-89960-2"
}

