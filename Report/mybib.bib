@article{Classen2013FeaturedTS,
  title={Featured Transition Systems: Foundations for Verifying Variability-Intensive Systems and Their Application to LTL Model Checking},
  author={Andreas Classen and Maxime Cordy and Pierre-Yves Schobbens and Patrick Heymans and Axel Legay and Jean-François Raskin},
  journal={IEEE Transactions on Software Engineering},
  year={2013},
  volume={39},
  pages={1069-1089}
}
@inproceedings{inproceedings,
	author = {Classen, Andreas and Heymans, Patrick and Schobbens, Pierre Yves and Legay, Axel and Raskin, Jean-Pierre},
	year = {2010},
	month = {01},
	pages = {},
	title = {Model Checking Lots of Systems: Efficient Verification of Temporal Properties in Software Product Lines},
	volume = {1},
	journal = {Proceedings - International Conference on Software Engineering},
	doi = {10.1145/1806799.1806850}
}
@Inbook{Bradfield2018,
	author="Bradfield, Julian
	and Walukiewicz, Igor",
	editor="Clarke, Edmund M.
	and Henzinger, Thomas A.
	and Veith, Helmut
	and Bloem, Roderick",
	title="The mu-calculus and Model Checking",
	bookTitle="Handbook of Model Checking",
	year="2018",
	publisher="Springer International Publishing",
	address="Cham",
	pages="871--919",
	abstract="This chapter presents that part of the theory of the $\mu${\$}{\backslash}mu{\$}-calculus that is relevant to the model-checking problem as broadly understood. The $\mu${\$}{\backslash}mu{\$}-calculus is one of the most important logics in model checking. It is a logic with an exceptional balance between expressiveness and algorithmic properties.",
	isbn="978-3-319-10575-8",
	doi="10.1007/978-3-319-10575-8_26",
	url="https://doi.org/10.1007/978-3-319-10575-8_26"
}
@BOOK {Groote,
	author    = "Jan Friso Groote and Mohammad Reza Mousavi",
	title     = "Modeling and Analysis of Communicating Systems",
	publisher = "The MIT Press",
	year      = "2014"
}
@inproceedings{FamBasedModelCheckingWithMCRL2,
	title = "Family-based model checking with mCRL2",
	abstract = "Family-based model checking targets the simultaneous verfication of multiple system variants, a technique to handle feature-based variability that is intrinsic to software product lines (SPLs). We present an approach for family-based verification based on the feature μ-calculus μLf, which combines modalities with feature expressions. This logic is interpreted over featured transition systems, a well-accepted model of SPLs, which allows one to reason over the collective behavior of a number of variants (a family of products). Via an embedding into the modal μ-calculus with data, underpinned by the general-purpose mCRL2 toolset, off-the-shelf tool support for μLf becomes readily available. We illustrate the feasibility of our approach on an SPL benchmark model and show the runtime improvement that family-based model checking with mCRL2 offers with respect to model checking the benchmark product-by-product.",
	author = "{ter Beek}, M.H. and {de Vink}, E.P. and T.A.C. Willemse",
	year = "2017",
	doi = "10.1007/978-3-662-54494-5_23",
	language = "English",
	isbn = "978-3-662-54494-5",
	series = "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)",
	publisher = "Springer",
	pages = "387--405",
	editor = "M. Huisman and J. Rubin",
	booktitle = "Fundamental Approaches to Software Engineering",
	address = "Germany",
}